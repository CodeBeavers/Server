/*
 * Meetup Management Service API
 *
 * Meetup Management Service API
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

// ReSharper disable RedundantUsingDirective
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace DotNetRu.MeetupManagement.WebApi.Contract.Models
{ 
    /// <inheritdoc />
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public class UpdateFriendDraftParameters : IEquatable<UpdateFriendDraftParameters>
    { 
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="Url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets MeetupIds
        /// </summary>
        [DataMember(Name="MeetupIds")]
        public Collection<string> MeetupIds { get; set; }

        /// <summary>
        /// Gets or Sets SpeakerIds
        /// </summary>
        [DataMember(Name="SpeakerIds")]
        public Collection<string> SpeakerIds { get; set; }

        /// <summary>
        /// Gets or Sets TalkIds
        /// </summary>
        [DataMember(Name="TalkIds")]
        public Collection<string> TalkIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateFriendDraftParameters {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  MeetupIds: ").Append(MeetupIds).Append("\n");
            sb.Append("  SpeakerIds: ").Append(SpeakerIds).Append("\n");
            sb.Append("  TalkIds: ").Append(TalkIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        // ReSharper disable once UnusedMember.Global
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
#pragma warning disable IDE0041 // Use 'is null' check
            if (ReferenceEquals(null, obj)) return false;
#pragma warning restore IDE0041 // Use 'is null' check
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((UpdateFriendDraftParameters)obj);
        }

        /// <inheritdoc />
        /// <summary>
        /// Returns true if UpdateFriendDraftParameters instances are equal
        /// </summary>
        /// <param name="other">Instance of UpdateFriendDraftParameters to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateFriendDraftParameters other)
        {
#pragma warning disable IDE0041 // Use 'is null' check
            if (ReferenceEquals(null, other)) return false;
#pragma warning restore IDE0041 // Use 'is null' check
            if (ReferenceEquals(this, other)) return true;

#pragma warning disable CA1309 // Use ordinal stringcomparison
#pragma warning disable CA1307 // Specify StringComparison
            return 
                (
                    // ReSharper disable once RedundantNameQualifier
                    string.Equals(Name, other.Name) ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    // ReSharper disable once RedundantNameQualifier
                    string.Equals(Url, other.Url) ||
                    Url != null &&
                    Url.Equals(other.Url)
                ) && 
                (
                    // ReSharper disable once RedundantNameQualifier
                    string.Equals(Description, other.Description) ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    MeetupIds == other.MeetupIds ||
                    MeetupIds != null &&
                    MeetupIds.SequenceEqual(other.MeetupIds)
                ) && 
                (
                    SpeakerIds == other.SpeakerIds ||
                    SpeakerIds != null &&
                    SpeakerIds.SequenceEqual(other.SpeakerIds)
                ) && 
                (
                    TalkIds == other.TalkIds ||
                    TalkIds != null &&
                    TalkIds.SequenceEqual(other.TalkIds)
                );
#pragma warning restore CA1307 // Specify StringComparison
#pragma warning restore CA1309 // Use ordinal stringcomparison
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (Name != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + Name.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (Url != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + Url.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (Description != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + Description.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (MeetupIds != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + MeetupIds.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (SpeakerIds != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + SpeakerIds.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                // ReSharper disable once NonReadonlyMemberInGetHashCode
                    if (TalkIds != null)
#pragma warning disable CA1307 // Specify StringComparison
                    // ReSharper disable once NonReadonlyMemberInGetHashCode
                    hashCode = hashCode * 59 + TalkIds.GetHashCode();
#pragma warning restore CA1307 // Specify StringComparison
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(UpdateFriendDraftParameters left, UpdateFriendDraftParameters right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(UpdateFriendDraftParameters left, UpdateFriendDraftParameters right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
