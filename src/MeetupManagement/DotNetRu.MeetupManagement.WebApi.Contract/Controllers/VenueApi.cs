/*
 * Meetup Management Service API
 *
 * Meetup Management Service API
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using DotNetRu.MeetupManagement.WebApi.Contract.Attributes;
using DotNetRu.MeetupManagement.WebApi.Contract.Models;

namespace DotNetRu.MeetupManagement.WebApi.Contract.Controllers
{ 
    /// <inheritdoc />
    /// <summary>
    /// 
    /// </summary>
    public abstract class VenueApiController : ControllerBase
    { 
        /// <summary>
        /// Create venue draft
        /// </summary>
        
        /// <param name="venueDraft"></param>
        /// <response code="201">Draft was sucessfully created</response>
        /// <response code="400">Invalid request parameters</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Draft is already exists</response>
        [HttpPost]
        [Route("/venues/draft")]
        [ValidateModelState]
        [SwaggerOperation("CreateVenueDraft")]
        public abstract void CreateVenueDraft([FromBody]CreateVenueDraftParameters venueDraft);

        /// <summary>
        /// Delete venue draft
        /// </summary>
        
        /// <param name="venueId"></param>
        /// <response code="204">Draft was successfuly deleted</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">Venue not found</response>
        [HttpDelete]
        [Route("/venues/{venueId}/draft")]
        [ValidateModelState]
        [SwaggerOperation("DeleteVenueDraft")]
        public abstract void DeleteVenueDraft([FromRoute][Required]string venueId);

        /// <summary>
        /// Get venue draft
        /// </summary>
        
        /// <param name="venueId"></param>
        /// <response code="200">OK</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">Venue not found</response>
        [HttpGet]
        [Route("/venues/{venueId}/draft")]
        [ValidateModelState]
        [SwaggerOperation("GetVenueDrafts")]
        [SwaggerResponse(statusCode: 200, type: typeof(VenueDraft), description: "OK")]
        public abstract VenueDraft GetVenueDrafts([FromRoute][Required]string venueId);

        /// <summary>
        /// Update venue draft
        /// </summary>
        
        /// <param name="venueId"></param>
        /// <param name="properties"></param>
        /// <response code="204">Draft was successfuly updated</response>
        /// <response code="400">Invalid request parameters</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">Venue not found</response>
        [HttpPut]
        [Route("/venues/{venueId}/draft")]
        [ValidateModelState]
        [SwaggerOperation("UpdateVenueDraft")]
        public abstract void UpdateVenueDraft([FromRoute][Required]string venueId, [FromBody]UpdateVenueDraftParameters properties);
    }
}
